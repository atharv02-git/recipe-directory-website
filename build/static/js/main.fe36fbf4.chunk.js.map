{"version":3,"sources":["context/ThemeContext.js","hooks/useTheme.js","components/Navbar.js","assets/mode-icon.svg","components/ThemeSelector.js","firebase/config.js","pages/create/Create.js","assets/delete-icon.svg","components/RecipeList.js","pages/home/Home.js","pages/recipe/Recipe.js","pages/search/Search.js","hooks/useFetch.js","pages/edit/Edit.js","App.js","index.js"],"names":["ThemeContext","createContext","themeReducer","state","action","type","defaultColor","payload","mode","ThemeProvider","children","useReducer","dispatch","Provider","value","changeColor","newColor","changeMode","useTheme","context","useContext","undefined","Error","Navbar","className","style","background","to","href","themeColors","ThemeSelector","src","modeIcon","alt","onClick","filter","map","color","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","projectFirestore","firestore","Create","useState","title","setTitle","method","setMethod","cookingTime","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientInput","useRef","navigate","useNavigate","submitHandler","e","a","preventDefault","doc","collection","add","console","log","onSubmit","onChange","target","required","ref","ing","trim","includes","prevIngredients","current","focus","i","RecipeList","recipes","length","recipe","substring","id","DeleteIcon","delete","then","catch","error","Home","data","setData","isPending","setIsPending","setError","useEffect","unSubscribe","onSnapshot","snapshot","empty","results","docs","forEach","push","err","message","Recipe","useParams","setRecipe","exists","ingredient","Search","queryString","useLocation","search","query","URLSearchParams","get","url","options","setOptions","postData","headers","body","JSON","stringify","controller","AbortController","fetchData","fetchOptions","fetch","signal","res","ok","statusText","json","name","abort","useFetch","Edit","slice","submitFormHandler","update","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe36fbf4.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst themeReducer = (state, action) => {\r\n  // if(action.type === 'CHANGE_COLOR'){\r\n  //     return {...state, defaultColor:action.payload}\r\n  // }else{\r\n  //     return state\r\n  // }\r\n  switch (action.type) {\r\n    case \"CHANGE_COLOR\":\r\n      return { ...state, defaultColor: action.payload };\r\n    case \"CHANGE_MODE\":\r\n      return { ...state, mode: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [state, dispatch] = useReducer(themeReducer, {\r\n    defaultColor: \"#555\",\r\n    mode: \"dark\",\r\n  });\r\n\r\n  const changeMode = (mode) => {\r\n    dispatch({ type: \"CHANGE_MODE\", payload: mode });\r\n  };\r\n\r\n  const changeColor = (newColor) => {\r\n    dispatch({ type: \"CHANGE_COLOR\", payload: newColor });\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ ...state, changeColor, changeMode}}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import { ThemeContext } from '../context/ThemeContext'\r\nimport { useContext } from 'react'\r\n\r\nexport const useTheme = () => {\r\n    const context = useContext(ThemeContext)\r\n\r\n    if(context === undefined){\r\n        throw new Error(\"useTheme() should be used inside the scope of ThemeProvider\")\r\n    }\r\n\r\n    return context\r\n}","import { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\n\r\n// styles\r\nimport \"./Navbar.css\";\r\n// import SearchBar from \"./SearchBar\";\r\n\r\nexport default function Navbar() {\r\n  const { defaultColor } = useTheme();\r\n\r\n  return (\r\n    <div className=\"navbar\" style={{ background: defaultColor }}>\r\n      <nav>\r\n        <Link to=\"/\" className=\"brand\">\r\n          <h1>My Recipes</h1>\r\n        </Link>\r\n        {/* <SearchBar /> */}\r\n        <a className=\"source-code\" href=\"https://github.com/atharv02-git/recipe-directory-website\">Source Code</a>\r\n        <Link to=\"/create\">Create Recipe</Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mode-icon.651cf792.svg\";","import { useTheme } from \"../hooks/useTheme\";\r\nimport modeIcon from \"../assets/mode-icon.svg\"\r\n// Styles\r\nimport \"./ThemeSelector.css\";\r\n\r\nconst themeColors = [\"#58249c\", \"#249c6b\", \"#d9534f\"];\r\n\r\nexport default function ThemeSelector() {\r\n  const { changeColor,mode,changeMode } = useTheme();\r\n    \r\n    const changeModeHandler = () => {\r\n        changeMode(mode === 'dark' ? 'light' : 'dark')\r\n    }\r\n    // console.log(mode)\r\n\r\n  return (\r\n    <div className=\"theme-selector\">\r\n        <div className=\"mode-toggle\">\r\n            <img \r\n            src={modeIcon} \r\n            alt=\"dark/light mode toggle icon\" \r\n            onClick={changeModeHandler}\r\n            style ={{filter : mode === 'dark' ? 'invert(100%)' : 'invert(20%)'}}\r\n            />\r\n        </div>\r\n      <div className=\"theme-buttons\">\r\n        {themeColors.map((color) => (\r\n          <div\r\n            key={color}\r\n            onClick={() => changeColor(color)}\r\n            style={{ background: color }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\n//initialize firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// initialize firestore services\r\nconst projectFirestore = firebase.firestore();\r\n\r\nexport { projectFirestore };\r\n","import { projectFirestore } from \"../../firebase/config\";\r\nimport { useState, useRef } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router\";\r\nimport { useTheme } from \"../../hooks/useTheme\";\r\n// styles\r\nimport \"./Create.css\";\r\n\r\nexport default function Create() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [method, setMethod] = useState(\"\");\r\n  const [cookingTime, setCookingTime] = useState(\"\");\r\n  // single ingredient state\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  // ingredients array\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const ingredientInput = useRef(null);\r\n\r\n  // Navigate\r\n  const navigate = useNavigate();\r\n\r\n  const { mode } = useTheme();\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const doc = {\r\n      title,\r\n      ingredients,\r\n      method,\r\n      cookingTime\r\n    };\r\n    try {\r\n      await projectFirestore.collection(\"recipes\").add(doc);\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const addIngredientHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const ing = newIngredient.trim();\r\n    // to check if ingredient exist already in ingredients array so no duplicate value can be put into array\r\n    if (ing && !ingredients.includes(ing)) {\r\n      setIngredients((prevIngredients) => [...prevIngredients, ing]);\r\n    }\r\n    setNewIngredient(\"\");\r\n    ingredientInput.current.focus();\r\n  };\r\n\r\n  return (\r\n    <div className={`create ${mode}`}>\r\n      <h2 className=\"page-title\">Add a New Recipe</h2>\r\n      <form onSubmit={submitHandler}>\r\n        <label>\r\n          <span>Recipe Title:</span>\r\n          <input\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            type=\"text\"\r\n            value={title}\r\n            required\r\n          />\r\n        </label>\r\n        {/* ingredients goes here */}\r\n        <label>\r\n          <span>Cooking Ingredients:</span>\r\n          <div className=\"ingredients\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setNewIngredient(e.target.value)}\r\n              value={newIngredient}\r\n              ref={ingredientInput}\r\n            />\r\n            <button onClick={addIngredientHandler} className=\"btn\">\r\n              add\r\n            </button>\r\n          </div>\r\n        </label>\r\n        <p>\r\n          Current Ingredients:\r\n          {ingredients.map((i) => (\r\n            <em key={i}>{i},</em>\r\n          ))}\r\n        </p>\r\n        {/* Method */}\r\n        <label>\r\n          <span>Recipe Method:</span>\r\n          <textarea\r\n            onChange={(e) => setMethod(e.target.value)}\r\n            value={method}\r\n            required\r\n          />\r\n        </label>\r\n        {/* cooking time */}\r\n        <label>\r\n          <span>Cooking Time (minutes):</span>\r\n          <input\r\n            onChange={(e) => setCookingTime(e.target.value)}\r\n            type=\"number\"\r\n            value={cookingTime}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className=\"btn\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/delete-icon.1129c53a.svg\";","import { Link } from \"react-router-dom\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\nimport DeleteIcon from \"../assets/delete-icon.svg\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n// styles\r\nimport \"./RecipeList.css\";\r\n\r\nexport default function RecipeList({ recipes }) {\r\n  const { mode } = useTheme();\r\n\r\n  if (recipes.length === 0) {\r\n    return <div className=\"error\">No recipes to load...</div>;\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    projectFirestore\r\n      .collection(\"recipes\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"Document successfully deleted!\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      {recipes.map((recipe) => (\r\n        <div key={recipe.id} className={`card ${mode}`}>\r\n          <h3>{recipe.title}</h3>\r\n          <p>{recipe.cookingTime} minutes to make</p>\r\n          <div>{recipe.method.substring(0, 100)}...</div>\r\n          <Link to={`/recipes/${recipe.id}`}>Cook This</Link>\r\n          <img\r\n            alt=\"delete-icon\"\r\n            className=\"delete\"\r\n            src={DeleteIcon}\r\n            onClick={() => deleteHandler(recipe.id)}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { projectFirestore } from \"../../firebase/config\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport RecipeList from \"../../components/RecipeList\";\r\n\r\n// custom hook\r\nimport { useTheme } from \"../../hooks/useTheme\";\r\n// styles\r\nimport \"./Home.css\";\r\n\r\nexport default function Home() {\r\n  const { mode } = useTheme();\r\n\r\n  const [data, setData] = useState(\"\");\r\n  const [isPending, setIsPending] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // function to fetch data from firestore in home page\r\n  useEffect(() => {\r\n    setIsPending(true);\r\n    // where unSub is a cleanup function\r\n    const unSubscribe = projectFirestore.collection(\"recipes\").onSnapshot((snapshot) => {\r\n        if (snapshot.empty) {\r\n          setError(\"Ops, No recipes to load :(\");\r\n          setIsPending(false);\r\n        } else {\r\n          let results = [];\r\n          snapshot.docs.forEach((doc) => {\r\n            results.push({ id: doc.id, ...doc.data() });\r\n          });\r\n          setData(results);\r\n          setIsPending(false);\r\n        }\r\n      }, (err)=>{\r\n        setError(err.message)\r\n        setIsPending(false)\r\n      })\r\n\r\n      return ()=>{unSubscribe()}\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`home ${mode}`}>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {data && <RecipeList recipes={data} />}\r\n    </div>\r\n  );\r\n}\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useTheme } from \"../../hooks/useTheme\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../../firebase/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// styles\r\nimport \"./Recipe.css\";\r\n\r\nexport default function Recipe() {\r\n  const { id } = useParams();\r\n  const { mode } = useTheme();\r\n\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [recipe, setRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setIsPending(true);\r\n\r\n    const unSubscribe = projectFirestore\r\n      .collection(\"recipes\")\r\n      .doc(id)\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          setIsPending(false);\r\n          setRecipe(doc.data());\r\n        } else {\r\n          setIsPending(false);\r\n          setError(`Could not find that recipe`);\r\n        }\r\n      });\r\n\r\n    return () => unSubscribe();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className={`recipe ${mode}`}>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {recipe && (\r\n        <>\r\n          <h2 className=\"page-title\">{recipe.title}</h2>\r\n          <p>Takes {recipe.cookingTime} minutes to make.</p>\r\n          <ul>\r\n            {recipe.ingredients.map((ingredient) => (\r\n              <li key={ingredient}>{ingredient}</li>\r\n            ))}\r\n          </ul>\r\n          <em className=\"method\">{recipe.method}</em>\r\n          <Link\r\n            className=\"button\"\r\n            to={`/edit/${id}`}\r\n            state={{ recipe: recipe, }}\r\n          >\r\n            Edit\r\n          </Link>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// import { projectFirestore } from \"../../firebase/config\";\r\n// import {useEffect,useState} from 'react'\r\n\r\nimport {useFetch} from '../../hooks/useFetch'\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport RecipeList from \"../../components/RecipeList\";\r\nimport { useTheme } from \"../../hooks/useTheme\";\r\n\r\n// styles\r\nimport \"./Search.css\";\r\n\r\nexport default function Search() {\r\n  const { mode } = useTheme();\r\n\r\n\r\n  const queryString = useLocation().search;\r\n  const queryParams = new URLSearchParams(queryString);\r\n  const query = queryParams.get(\"_q\");\r\n\r\n  const url = \"http://localhost:3000/recipes?q=\" + query;\r\n  const { error, isPending, data } = useFetch(url);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={`page-title ${mode}`}>Recipes including \"{query}\"</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {data && <RecipeList recipes={data} />}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (url, method = \"GET\") => {\r\n  //creating a pending state for loading data in a page\r\n  // useState to catch error\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [options, setOptions] = useState(null);\r\n\r\n  const postData = (postData) => {\r\n    setOptions({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(postData)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    //Aborting Fetch Requests\r\n    const controller = new AbortController();\r\n\r\n    const fetchData = async (fetchOptions) => {\r\n      setIsPending(true);\r\n\r\n      //instead of using callBack function we are creating fetch data which is an async function to eliminate looping error. nOW while fettching if there is any error the res.ok prop is false it will throw an error then the catch block will catch the error and it will log the actual error message\r\n\r\n      try {\r\n        const res = await fetch(url, {\r\n          ...fetchOptions,\r\n          signal: controller.signal,\r\n        });\r\n        if (!res.ok) {\r\n          throw new Error(res.statusText);\r\n        }\r\n        const json = await res.json();\r\n\r\n        setIsPending(false);\r\n        setData(json);\r\n        setError(null);\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"The fetch was aborted\");\r\n        } else {\r\n          setIsPending(false);\r\n          setError(\"Oops, cannot fetch the data :(\");\r\n          console.log(err.message);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Invoking the fetch data function only if the the useFetch method is GET request\r\n    if (method === \"GET\") {\r\n      fetchData();\r\n    }\r\n    if (method === \"POST\" && options) {\r\n      fetchData(options);\r\n    }\r\n\r\n    // Cleanup function for abort controller\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [url, method, options]);\r\n\r\n  return { data, isPending, error, postData };\r\n};\r\n","import { projectFirestore } from \"../../firebase/config\";\r\nimport { useParams, useLocation } from \"react-router\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useState, useRef } from \"react\";\r\n// style\r\nimport \"./Edit.css\";\r\n\r\n// Hooks\r\nimport { useTheme } from \"../../hooks/useTheme\";\r\n\r\nexport default function Edit() {\r\n  const location = useLocation();\r\n  const { recipe } = location.state;\r\n\r\n  const [title, setTitle] = useState(recipe.title);\r\n  const [method, setMethod] = useState(recipe.method);\r\n  const [cookingTime, setCookingTime] = useState(\r\n    recipe.cookingTime.slice(0, 1)\r\n  );\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState(recipe.ingredients);\r\n  // useRef\r\n  const ingredientInput = useRef(null);\r\n\r\n  const { mode } = useTheme();\r\n  const navigate = useNavigate();\r\n  // Destructuring id\r\n  const { id } = useParams();\r\n\r\n  const submitFormHandler = async (e) => {\r\n    e.preventDefault();\r\n    console.log(title, method, cookingTime, ingredients);\r\n    try {\r\n      await projectFirestore\r\n        .collection(\"recipes\")\r\n        .doc(id)\r\n        .update({\r\n          title:title,\r\n          ingredients:ingredients,\r\n          method:method,\r\n          cookingTime:cookingTime\r\n            // cookingTime.slice(0, 1) === \"1\"\r\n            //   ? cookingTime.slice(0, 1) + \"minute\"\r\n            //   : cookingTime.slice(0, 1) + \"minutes\",\r\n        });\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const addIngredientHandler = (e) => {\r\n    e.preventDefault();\r\n    // To check no duplicate values to be repeated\r\n    const ing = newIngredient.trim();\r\n    if (ing && !ingredients.includes(ing)) {\r\n      setIngredients((prevIngredients) => [...prevIngredients, ing]);\r\n    }\r\n    setNewIngredient(\"\");\r\n    ingredientInput.current.focus();\r\n  };\r\n\r\n  return (\r\n    <div className={`edit ${mode}`}>\r\n      <h2 className=\"page-title\">Edit Recipe</h2>\r\n      {recipe && (\r\n        <form onSubmit={submitFormHandler}>\r\n          <label>\r\n            <span>Recipe Title:</span>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              value={title}\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <span>Cooking Ingredients:</span>\r\n            <div className=\"ingredients\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setNewIngredient(e.target.value)}\r\n                value={newIngredient}\r\n                ref={ingredientInput}\r\n              />\r\n              <button onClick={addIngredientHandler} className=\"btn\">\r\n                add\r\n              </button>\r\n            </div>\r\n          </label>\r\n          <p>\r\n            Current ingredients:{\" \"}\r\n            {ingredients.map((i) => (\r\n              <span\r\n                className=\"ingredient\"\r\n                key={i}\r\n              >\r\n                {i}{\" \"}\r\n              </span>\r\n            ))}\r\n          </p>\r\n          \r\n          <label>\r\n            <span>Recipe Method:</span>\r\n            <textarea\r\n              onChange={(e) => setMethod(e.target.value)}\r\n              value={method}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Cooking Time (minutes):</span>\r\n            <input\r\n              onChange={(e) => setCookingTime(e.target.value)}\r\n              type=\"number\"\r\n              value={cookingTime}\r\n              required\r\n            />\r\n          </label>\r\n          <button className=\"btn\">Update</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}","import \"./App.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { useTheme } from './hooks/useTheme'\n\n// components\nimport Navbar from \"./components/Navbar\";\nimport ThemeSelector from \"./components/ThemeSelector\";\n\n// Pages\nimport Create from \"./pages/create/Create\";\nimport Home from \"./pages/home/Home\";\nimport Recipe from \"./pages/recipe/Recipe\";\nimport Search from \"./pages/search/Search\";\nimport Edit from \"./pages/edit/Edit\";\n\nfunction App() {\n  const { mode } = useTheme()\n\n  return (\n    <div className={`App ${mode}`}>\n      <BrowserRouter>\n        <Navbar />\n        <ThemeSelector />\n        <Routes>\n          <Route path=\"/\" element={<Home />}></Route>\n          <Route path=\"create\" element={<Create />}></Route>\n          <Route path=\"search\" element={<Search />}></Route>\n          <Route path=\"recipes/:id\" element={<Recipe />}></Route>\n          <Route path=\"edit/:id\" element={<Edit />}></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// context\nimport { ThemeProvider } from \"./context/ThemeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}